# Get common recipes
recipes = ENV['fsa'] + '/PlotTools/rake/recipes.rake'
import recipes

$jobid = ENV['jobid']

# Figure out what run period we are in
$period = '8TeV'
PU = ENV['PU']
#if $jobid.include? '8TeV'
#  $period = '8TeV'
#end


################################################################################
## Sample names ################################################################
################################################################################
#
# Get sample names containing a substring
def get_sample_names(substring)
  inputs = Dir.glob("inputs/#{$jobid}/*.txt").select {|x| x.include? substring}
  inputs = inputs.map{|x| File.basename(x).sub(".txt", "")}
  return inputs
end
#
samples = Hash[
  "HiggsGG" => get_sample_names('GluGlu'),
  "HiggsVBF" => get_sample_names('VBF'),
  "TTBar" =>  get_sample_names('TT_'),
  "WJets" =>  get_sample_names('WJets'),
  "DYJets" =>  get_sample_names('DYJetsToLL_M-50'),
  "ZTauTauMC" =>  get_sample_names('ZTauTau'),
  #"SMHiggs" =>  Array['GluGluToHToTauTau_M-125_13TeV-powheg-pythia6','VBF_HToTauTau_M-125_13TeV-powheg-pythia6'],
  #"SingleTop" => get_sample_names('ST'),
  #"DiBoson" => Array['WWTo2L2Nu_13TeV-powheg','WZ_TuneCUETP8M1_13TeV-pythia8','ZZ_TuneCUETP8M1_13TeV-pythia8']
  "DiBoson" => Array['WW_TuneCUETP8M1_13TeV-pythia8','WZ_TuneCUETP8M1_13TeV-pythia8','ZZ_TuneCUETP8M1_13TeV-pythia8'],
  "Data2015C" => get_sample_names('2015C'),
  "Data2015D" => get_sample_names('2015D')
]

# Function to get the .root files for an analyzer and samples

def get_analyzer_results(analyzer, the_samples)
  output = Array.new
  analyzer_base = analyzer.sub('.py', '')
  the_samples.each do |sample|
    output << "results/#{$jobid}/#{analyzer_base}/#{sample}.root"
  end
  return output
end


################################################################################
## Recipes to analyze the GG channel of the LFV HToMuTau analysis
##  targets:
##     mt
################################################################################

##use $PU = false for samples with no pileup
task :signal  => get_analyzer_results( "AnalyzeLFVMuTau.py",samples['HiggsGG']+samples['HiggsVBF'])
task :mutauMCNOPU => get_analyzer_results( "AnalyzeLFVMuTauNOPU.py",samples['DYJets'])
task :ztautauMC => get_analyzer_results( "AnalyzeLFVMuTau.py",samples['ZTauTauMC'])
task :mutauMC => get_analyzer_results( "AnalyzeLFVMuTau.py",samples['WJets']+samples['DiBoson']+samples['TTBar']+samples['HiggsGG']+samples['HiggsVBF']+samples['DYJets'])
task :mutauData  => get_analyzer_results( "AnalyzeLFVMuTau.py",samples['Data2015C']+samples['Data2015D'])
task :muons => get_analyzer_results( "AnalyzeLFVMuMu.py" , samples['DYJets']+samples['Data2015C']+samples['Data2015D'])
task :mumutau => get_analyzer_results( "AnalyzeLFVMuMuTau.py" , samples['DYJets']+samples['DiBoson']+samples['TTBar'])
task :mumutauData => get_analyzer_results( "AnalyzeLFVMuMuTau.py" , samples['DYJets']+samples['Data2015C']+samples['Data2015D']+samples['DiBoson']+samples['TTBar'])

#task :analyzetest2  => get_analyzer_results(  "AnalyzeLFVMuTauLoose.py",samples['signal'])
#task :analyzetest2Bg  => get_analyzer_results(  "AnalyzeLFVMuTauLoose.py",samples['TTBar']+samples['WJets']+samples['DYJets']+samples['SMHiggs'])

